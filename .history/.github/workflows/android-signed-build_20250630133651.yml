name: Android Signed Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'microsoft'

    - name: Install Android SDK
      uses: android-actions/setup-android@v3
      with:
        accept-android-sdk-licenses: true
        log-accepted-android-sdk-licenses: true
        packages: "platform-tools build-tools;34.0.0 platforms;android-34 ndk;26.1.10909125"

    - name: Install Android workload
      run: |
        echo "=== Installing Android workload ==="
        dotnet workload install android --include-previews
        echo "=== Verifying installation ==="
        dotnet workload list | grep -i android || echo "Android workload not found"
        
    - name: Verify environment
      run: |
        echo "=== .NET SDK Version ==="
        dotnet --version
        echo "=== Installed Workloads ==="
        dotnet workload list
        echo "=== Available SDKs ==="
        dotnet --list-sdks
        echo "=== Available Runtimes ==="
        dotnet --list-runtimes
        echo "=== Android SDK Location ==="
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"

    - name: Restore NuGet packages
      run: dotnet restore WoWonder.csproj

    - name: Setup keystore for signing
      run: |
        echo "Using existing keystore from repository"
        ls -la KeyApk/
        
    - name: Build Signed Release APK
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD || 'wowonder' }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS || 'wowondertimelinechat' }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD || 'wowonder' }}
      run: |
        dotnet build WoWonder.csproj \
          -c Release \
          -p:AndroidBuildApplicationPackage=true \
          -p:AndroidKeyStore=true \
          -p:AndroidSigningKeyStore=KeyApk/wowondertimelinechat.keystore \
          -p:AndroidSigningStorePass="${KEYSTORE_PASSWORD}" \
          -p:AndroidSigningKeyAlias="${KEY_ALIAS}" \
          -p:AndroidSigningKeyPass="${KEY_PASSWORD}"

    - name: Build Signed AAB (Android App Bundle)
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD || 'wowonder' }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS || 'wowondertimelinechat' }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD || 'wowonder' }}
      run: |
        dotnet build WoWonder.csproj \
          -c Release \
          -p:AndroidBuildApplicationPackage=true \
          -p:AndroidPackageFormat=aab \
          -p:AndroidKeyStore=true \
          -p:AndroidSigningKeyStore=KeyApk/wowondertimelinechat.keystore \
          -p:AndroidSigningStorePass="${KEYSTORE_PASSWORD}" \
          -p:AndroidSigningKeyAlias="${KEY_ALIAS}" \
          -p:AndroidSigningKeyPass="${KEY_PASSWORD}"

    - name: Find generated files
      run: |
        find . -name "*.apk" -type f
        find . -name "*.aab" -type f

    - name: Upload Signed APK
      uses: actions/upload-artifact@v4
      with:
        name: signed-release-apk
        path: |
          bin/Release/**/*.apk
          bin/Release/**/*-Signed.apk

    - name: Upload Signed AAB
      uses: actions/upload-artifact@v4
      with:
        name: signed-android-app-bundle
        path: |
          bin/Release/**/*.aab

    - name: Build Summary
      run: |
        echo "ðŸŽ‰ Signed build completed successfully!"
        echo "ðŸ“± Signed APK files are available in the artifacts section"
        echo "ðŸ“¦ Signed AAB files are available in the artifacts section"
        echo ""
        echo "To create a release manually:"
        echo "1. Go to the Actions tab"
        echo "2. Download the signed artifacts"
        echo "3. Go to Releases and create a new release"
        echo "4. Upload the signed APK/AAB files" 